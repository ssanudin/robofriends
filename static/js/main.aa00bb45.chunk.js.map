{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Card","name","email","id","alt","src","width","CardList","robots","map","user","i","ErrorBoundary","props","state","hasError","error","info","this","setState","children","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAeeA,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACE,qBAAKC,UAAU,MAAf,SACE,uBACAA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCMDK,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKP,UAAU,yCAAf,UACE,qBAAKQ,IAAI,SAASC,IAAG,+BAA0BF,EAA1B,YAAwCG,MAAM,QACnE,gCACE,6BAAKL,IACL,4BAAIC,WCkBGK,EAvBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAKjB,OACE,qBAAKZ,UAAU,iBAAf,SAEIY,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCWFC,E,kDArBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAU,GAHK,E,qDAQnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,sDAGFG,KAAKL,MAAMO,a,GAlBMC,aCgDbC,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKL,SAAS,CAAEzB,YAAa8B,EAAMC,OAAOC,SAb1C,EAAKZ,MAAQ,CACXN,OAAQ,GACRd,YAAc,IAJJ,E,qDAQd,WAAqB,IAAD,OAClBiC,MAAM,8CACHC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACX,OAAQuB,S,oBAO3C,WACE,MAAgCb,KAAKJ,MAA7BN,EAAR,EAAQA,OAAQd,EAAhB,EAAgBA,YACVsC,EAAiBxB,EAAOyB,QAAO,SAAAC,GACnC,OAAOA,EAAMjC,KAAKkC,cAAcC,SAAU1C,EAAYyC,kBAGxD,OAAQ3B,EAAO6B,OAIX,sBAAKzC,UAAU,KAAf,UACE,yBAAQA,UAAU,yCAAlB,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAcuB,KAAKK,oBAGlC,cAAC,EAAD,UACE,cAAC,EAAD,CAAUf,OAAQwB,SAVxB,oBAAIpC,UAAU,KAAd,6B,GA1BYyB,aCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.aa00bb45.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input \r\n      className=\"pa3 ba b--green bg-lightest-blue\"\r\n      type=\"search\" \r\n      placeholder=\"search robots\" \r\n      onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card = ( {name, email, id} ) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow\">\r\n      <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} width=\"150\"/>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react'; \nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n  // if( true ) {\n  //   throw new Error (\"NOOO\");\n  // }\n\n  return (\n    <div className=\"robots_wrapper\">\n      {\n        robots.map((user, i) => {\n          return (\n            <Card \n            key={i} \n            id={robots[i].id} \n            name={robots[i].name} \n            email={robots[i].email} \n            />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;\n","// import { render } from \"@testing-library/react\";\r\nimport React, {Component} from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    };\r\n  }\r\n\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if( this.state.hasError ) {\r\n      return <h1>Something went wrong</h1>\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport SearchBox from '../components/SearchBox';\r\n// import Scroll from '../components/Scroll';\r\nimport CardList from '../components/CardList';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield : ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then( response => response.json() )\r\n      .then( users => this.setState({robots: users}) );\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes( searchfield.toLowerCase() );\r\n    });\r\n\r\n    return !robots.length ?\r\n      <h1 className=\"f1\">Loading ...</h1>\r\n    :\r\n      (\r\n        <div className=\"tc\">\r\n          <header className=\"fixed w-100 ph3 pv3 pv4-ns ph4-m ph5-l\">\r\n              <h1 className=\"f2\">RoboFriends</h1>\r\n              <SearchBox searchChange={this.onSearchChange} />\r\n          </header>\r\n          {/* <Scroll> */}\r\n          <ErrorBoundary>\r\n            <CardList robots={filteredRobots} />\r\n          </ErrorBoundary>\r\n          {/* </Scroll> */}\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}